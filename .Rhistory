points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
# questo problema dei punti è ingestibile anyway
# li shifto
abline(v = 80)
punti_medi[3] = 80 - rpeak
punti_medi = round(apply(punti, 2, mean, na.rm = TRUE))
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
punti_medi
punti_medi[5] = -20
punti_medi[8] = punti_medi[10]
puntiù
abline(v = 190)
punti_medi[10] = 190 - rpeak
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
# smoothing
my_smoothin = smoothing(HB_mean,rpeak = rpeak, punti_medi = punti_medi)
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = 20)
abline(v = 50)
abline(v = 55)
punti_medi[2] = 55 - rpeak
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
# smoothing
my_smoothin = smoothing(HB_mean,rpeak = rpeak, punti_medi = punti_medi)
punti_medi
abline(v = 120)
punti_medi[6] = 120 - rpeak
punti_medi[7] = 10
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
# smoothing
my_smoothin = smoothing(HB_mean,rpeak = rpeak, punti_medi = punti_medi)
df_smooth = data.frame(my_smoothin)
write.csv(df_smooth,paste(names[i],'/Smooth.csv',sep = ''), row.names = FALSE)
graphics.off()
i = 57
df <- read.csv(paste(names[i],'/Signals.csv',sep = ''), header = TRUE)
head(df)
dim(df)
if (length(which(df[,dim(df)[2]] == 0)) == dim(df)[1]) {
df = df[-dim(df)[2]]
}
dim(df)
HB_mean = rowMeans(df)
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
for ( c in df ) lines( c, type="l", col = 'grey' )
lines(HB_mean, lwd = 2, col = 'black', type = 'l')
punti = read.csv(paste(names[i],'/Peaks.csv',sep = ''), header = TRUE)
head(punti)
punti_medi = round(apply(punti, 2, mean, na.rm = TRUE))
# r_peak
rpeak = ceiling(length(HB_mean) / 2)
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
abline(v = 130)
punti_medi[9] = 130 - rpeak
abline(v = 145)
abline(v = 147)
punti_medi[8] = 147 - rpeak
abline(v = 160)
punti_medi[10] = 160 - rpeak
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
# smoothing
my_smoothin = smoothing(HB_mean,rpeak = rpeak, punti_medi = punti_medi)
df_smooth = data.frame(my_smoothin)
write.csv(df_smooth,paste(names[i],'/Smooth.csv',sep = ''), row.names = FALSE)
i = 58
df <- read.csv(paste(names[i],'/Signals.csv',sep = ''), header = TRUE)
head(df)
dim(df)
if (length(which(df[,dim(df)[2]] == 0)) == dim(df)[1]) {
df = df[-dim(df)[2]]
}
dim(df)
HB_mean = rowMeans(df)
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
for ( c in df ) lines( c, type="l", col = 'grey' )
lines(HB_mean, lwd = 2, col = 'black', type = 'l')
punti = read.csv(paste(names[i],'/Peaks.csv',sep = ''), header = TRUE)
head(punti)
punti_medi = round(apply(punti, 2, mean, na.rm = TRUE))
# r_peak
rpeak = ceiling(length(HB_mean) / 2)
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
# smoothing
my_smoothin = smoothing(HB_mean,rpeak = rpeak, punti_medi = punti_medi)
df_smooth = data.frame(my_smoothin)
write.csv(df_smooth,paste(names[i],'/Smooth.csv',sep = ''), row.names = FALSE)
i = 59
df <- read.csv(paste(names[i],'/Signals.csv',sep = ''), header = TRUE)
head(df)
dim(df)
if (length(which(df[,dim(df)[2]] == 0)) == dim(df)[1]) {
df = df[-dim(df)[2]]
}
dim(df)
HB_mean = rowMeans(df)
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
for ( c in df ) lines( c, type="l", col = 'grey' )
lines(HB_mean, lwd = 2, col = 'black', type = 'l')
punti = read.csv(paste(names[i],'/Peaks.csv',sep = ''), header = TRUE)
head(punti)
punti_medi = round(apply(punti, 2, mean, na.rm = TRUE))
# r_peak
rpeak = ceiling(length(HB_mean) / 2)
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
# smoothing
my_smoothin = smoothing(HB_mean,rpeak = rpeak, punti_medi = punti_medi)
punti_medi
df_smooth = data.frame(my_smoothin)
write.csv(df_smooth,paste(names[i],'/Smooth.csv',sep = ''), row.names = FALSE)
i = 60
df <- read.csv(paste(names[i],'/Signals.csv',sep = ''), header = TRUE)
head(df)
dim(df)
if (length(which(df[,dim(df)[2]] == 0)) == dim(df)[1]) {
df = df[-dim(df)[2]]
}
dim(df)
HB_mean = rowMeans(df)
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
for ( c in df ) lines( c, type="l", col = 'grey' )
lines(HB_mean, lwd = 2, col = 'black', type = 'l')
punti = read.csv(paste(names[i],'/Peaks.csv',sep = ''), header = TRUE)
head(punti)
punti_medi = round(apply(punti, 2, mean, na.rm = TRUE))
# r_peak
rpeak = ceiling(length(HB_mean) / 2)
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
i = 62
df <- read.csv(paste(names[i],'/Signals.csv',sep = ''), header = TRUE)
head(df)
dim(df)
if (length(which(df[,dim(df)[2]] == 0)) == dim(df)[1]) {
df = df[-dim(df)[2]]
}
dim(df)
HB_mean = rowMeans(df)
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
for ( c in df ) lines( c, type="l", col = 'grey' )
lines(HB_mean, lwd = 2, col = 'black', type = 'l')
punti = read.csv(paste(names[i],'/Peaks.csv',sep = ''), header = TRUE)
head(punti)
punti_medi = round(apply(punti, 2, mean, na.rm = TRUE))
# r_peak
rpeak = ceiling(length(HB_mean) / 2)
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
# questo problema dei punti è ingestibile anyway
# li shifto
abline(v = 80)
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
# smoothing
my_smoothin = smoothing(HB_mean,rpeak = rpeak, punti_medi = punti_medi)
punti_medi
# S peak
abline(v = 12)
# S peak
abline(v = 12 + rpeak)
punti_medi[7] = 12
i = 63
df <- read.csv(paste(names[i],'/Signals.csv',sep = ''), header = TRUE)
head(df)
dim(df)
if (length(which(df[,dim(df)[2]] == 0)) == dim(df)[1]) {
df = df[-dim(df)[2]]
}
dim(df)
HB_mean = rowMeans(df)
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
for ( c in df ) lines( c, type="l", col = 'grey' )
lines(HB_mean, lwd = 2, col = 'black', type = 'l')
punti = read.csv(paste(names[i],'/Peaks.csv',sep = ''), header = TRUE)
head(punti)
punti_medi = round(apply(punti, 2, mean, na.rm = TRUE))
# r_peak
rpeak = ceiling(length(HB_mean) / 2)
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
# questo problema dei punti è ingestibile anyway
# li shifto
abline(v = 80)
# questo problema dei punti è ingestibile anyway
# li shifto
abline(v = 85)
punti_medi[3] = 85 - rpeak
abline(v = 75)
abline(v = 77)
punti_medi[1] = 77 - rpeak
abline(v = 55)
punti_medi[2] = 55 - rpeak
abline(v = 150)
punti_medi[9] = 150 - rpeak
abline(v = 180)
abline(v = 190)
punti_medi[8] = 190 - rpeak
abline(v = 210)
abline(v = 220)
punti_medi[10] = 220 - rpeak
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
# smoothing
my_smoothin = smoothing(HB_mean,rpeak = rpeak, punti_medi = punti_medi)
abline(v = 210)
punti_medi[10] = 20 - rpeak
punti_medi[10] = 210 - rpeak
abline(v = 160)
punti_medi[9] = 160 - rpeak
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
# smoothing
my_smoothin = smoothing(HB_mean,rpeak = rpeak, punti_medi = punti_medi)
df_smooth = data.frame(my_smoothin)
write.csv(df_smooth,paste(names[i],'/Smooth.csv',sep = ''), row.names = FALSE)
graphics.off()
i = 64
df <- read.csv(paste(names[i],'/Signals.csv',sep = ''), header = TRUE)
head(df)
dim(df)
if (length(which(df[,dim(df)[2]] == 0)) == dim(df)[1]) {
df = df[-dim(df)[2]]
}
dim(df)
HB_mean = rowMeans(df)
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
for ( c in df ) lines( c, type="l", col = 'grey' )
lines(HB_mean, lwd = 2, col = 'black', type = 'l')
punti = read.csv(paste(names[i],'/Peaks.csv',sep = ''), header = TRUE)
head(punti)
punti_medi = round(apply(punti, 2, mean, na.rm = TRUE))
# r_peak
rpeak = ceiling(length(HB_mean) / 2)
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
abline(v = 65)
abline(70)
abline(v = 70)
punti_medi[2] = 70 - rpeak
abline(v = 200)
punti_medi[8] = 200 - rpeak
abline(v = 210)
abline(v = 220)
punti_medi[10] = 220 - rpeak
abline(v = 160)
abline(v = 170)
punti_medi[9] = 170 - rpeak
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
# smoothing
my_smoothin = smoothing(HB_mean,rpeak = rpeak, punti_medi = punti_medi)
df_smooth = data.frame(my_smoothin)
write.csv(df_smooth,paste(names[i],'/Smooth.csv',sep = ''), row.names = FALSE)
i = 65
df <- read.csv(paste(names[i],'/Signals.csv',sep = ''), header = TRUE)
head(df)
dim(df)
if (length(which(df[,dim(df)[2]] == 0)) == dim(df)[1]) {
df = df[-dim(df)[2]]
}
dim(df)
HB_mean = rowMeans(df)
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
for ( c in df ) lines( c, type="l", col = 'grey' )
lines(HB_mean, lwd = 2, col = 'black', type = 'l')
punti = read.csv(paste(names[i],'/Peaks.csv',sep = ''), header = TRUE)
head(punti)
punti_medi = round(apply(punti, 2, mean, na.rm = TRUE))
# r_peak
rpeak = ceiling(length(HB_mean) / 2)
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
i = 66
df <- read.csv(paste(names[i],'/Signals.csv',sep = ''), header = TRUE)
head(df)
dim(df)
if (length(which(df[,dim(df)[2]] == 0)) == dim(df)[1]) {
df = df[-dim(df)[2]]
}
dim(df)
HB_mean = rowMeans(df)
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
for ( c in df ) lines( c, type="l", col = 'grey' )
lines(HB_mean, lwd = 2, col = 'black', type = 'l')
punti = read.csv(paste(names[i],'/Peaks.csv',sep = ''), header = TRUE)
head(punti)
punti_medi = round(apply(punti, 2, mean, na.rm = TRUE))
# r_peak
rpeak = ceiling(length(HB_mean) / 2)
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
# questo problema dei punti è ingestibile anyway
# li shifto
abline(v = 70)
punti_medi[3] = 70 - rpeak
abline(v = 160)
abline(v = 165)
abline(v = 163)
punti_medi[8] = 163 - rpeak
abline(v = 180)
punti_medi[10] = 180 - rpeak
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
# smoothing
my_smoothin = smoothing(HB_mean,rpeak = rpeak, punti_medi = punti_medi)
df_smooth = data.frame(my_smoothin)
write.csv(df_smooth,paste(names[i],'/Smooth.csv',sep = ''), row.names = FALSE)
i = 68
df <- read.csv(paste(names[i],'/Signals.csv',sep = ''), header = TRUE)
head(df)
dim(df)
if (length(which(df[,dim(df)[2]] == 0)) == dim(df)[1]) {
df = df[-dim(df)[2]]
}
dim(df)
HB_mean = rowMeans(df)
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
for ( c in df ) lines( c, type="l", col = 'grey' )
lines(HB_mean, lwd = 2, col = 'black', type = 'l')
punti = read.csv(paste(names[i],'/Peaks.csv',sep = ''), header = TRUE)
head(punti)
punti_medi = round(apply(punti, 2, mean, na.rm = TRUE))
# r_peak
rpeak = ceiling(length(HB_mean) / 2)
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
# smoothing
my_smoothin = smoothing(HB_mean,rpeak = rpeak, punti_medi = punti_medi)
df_smooth = data.frame(my_smoothin)
write.csv(df_smooth,paste(names[i],'/Smooth.csv',sep = ''), row.names = FALSE)
i = 70
df <- read.csv(paste(names[i],'/Signals.csv',sep = ''), header = TRUE)
head(df)
dim(df)
if (length(which(df[,dim(df)[2]] == 0)) == dim(df)[1]) {
df = df[-dim(df)[2]]
}
dim(df)
HB_mean = rowMeans(df)
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
for ( c in df ) lines( c, type="l", col = 'grey' )
lines(HB_mean, lwd = 2, col = 'black', type = 'l')
punti = read.csv(paste(names[i],'/Peaks.csv',sep = ''), header = TRUE)
head(punti)
punti_medi = round(apply(punti, 2, mean, na.rm = TRUE))
# r_peak
rpeak = ceiling(length(HB_mean) / 2)
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
punti_medi
punti_medi[5] = -22
# questo problema dei punti è ingestibile anyway
# li shifto
abline(v = 102)
# questo problema dei punti è ingestibile anyway
# li shifto
abline(v = 105)
punti_medi[3] = 105 - rpeak
abline(v = 100)
punti_medi[1] = 100 - rpeak
abline(v = 90)
punti_medi[2] = 90 - rpeak
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
# smoothing
my_smoothin = smoothing(HB_mean,rpeak = rpeak, punti_medi = punti_medi)
df_smooth = data.frame(my_smoothin)
write.csv(df_smooth,paste(names[i],'/Smooth.csv',sep = ''), row.names = FALSE)
i = 72
df <- read.csv(paste(names[i],'/Signals.csv',sep = ''), header = TRUE)
head(df)
dim(df)
if (length(which(df[,dim(df)[2]] == 0)) == dim(df)[1]) {
df = df[-dim(df)[2]]
}
dim(df)
HB_mean = rowMeans(df)
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
for ( c in df ) lines( c, type="l", col = 'grey' )
lines(HB_mean, lwd = 2, col = 'black', type = 'l')
punti = read.csv(paste(names[i],'/Peaks.csv',sep = ''), header = TRUE)
head(punti)
punti_medi = round(apply(punti, 2, mean, na.rm = TRUE))
# r_peak
rpeak = ceiling(length(HB_mean) / 2)
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
punti_medi
punti_medi[9] = punti_medi[10]
abline(v = 180)
punti_medi[8] = 180 - rpeak
abline(v = 190)
punti_medi[10] = 190 - rpeak
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
# smoothing
my_smoothin = smoothing(HB_mean,rpeak = rpeak, punti_medi = punti_medi)
abline(v = 45)
punti_medi[2] = 45 - rpeak
# R offset
abline(v = 140)
punti_medi
punti_medi[6] = 140 - rpeak
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
punti_medi
# S peak
abline(v = 110)
# S peak
abline(v = 120)
punti_medi[7] = 120 - rpeak
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
# smoothing
my_smoothin = smoothing(HB_mean,rpeak = rpeak, punti_medi = punti_medi)
df_smooth = data.frame(my_smoothin)
write.csv(df_smooth,paste(names[i],'/Smooth.csv',sep = ''), row.names = FALSE)
i = 74
df <- read.csv(paste(names[i],'/Signals.csv',sep = ''), header = TRUE)
head(df)
dim(df)
if (length(which(df[,dim(df)[2]] == 0)) == dim(df)[1]) {
df = df[-dim(df)[2]]
}
dim(df)
HB_mean = rowMeans(df)
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
for ( c in df ) lines( c, type="l", col = 'grey' )
lines(HB_mean, lwd = 2, col = 'black', type = 'l')
punti = read.csv(paste(names[i],'/Peaks.csv',sep = ''), header = TRUE)
i = 75
df <- read.csv(paste(names[i],'/Signals.csv',sep = ''), header = TRUE)
head(df)
dim(df)
if (length(which(df[,dim(df)[2]] == 0)) == dim(df)[1]) {
df = df[-dim(df)[2]]
}
dim(df)
HB_mean = rowMeans(df)
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
for ( c in df ) lines( c, type="l", col = 'grey' )
lines(HB_mean, lwd = 2, col = 'black', type = 'l')
punti = read.csv(paste(names[i],'/Peaks.csv',sep = ''), header = TRUE)
head(punti)
punti_medi = round(apply(punti, 2, mean, na.rm = TRUE))
# r_peak
rpeak = ceiling(length(HB_mean) / 2)
# plot dei punti importanti
plot(HB_mean, lwd = 2, col = 'black', type = 'l')
points(rpeak+punti_medi,HB_mean[rpeak + punti_medi])
abline(v = rpeak, col = 'red')
